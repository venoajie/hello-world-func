
name: Deploy Hello-World Function to OCI

on:
  push:
    branches:
      - main

env:
  APP_NAME: "hello-world-app"
  FUNCTION_NAME: "hello-world-writer"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 1. Check out repository
      uses: actions/checkout@v4

    # --- THIS IS THE NEW, CORRECTED STEP ---
    - name: 2. Install OCI CLI
      run: |
        curl -L -o oci_install.sh https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        bash oci_install.sh --accept-all-defaults --oci-cli-version 3.40.0
        echo "/home/runner/bin" >> $GITHUB_PATH
        echo "/home/runner/lib/oracle-cli/lib/python3.8/site-packages" >> $GITHUB_PATH
        echo "/home/runner/lib/oracle-cli/bin" >> $GITHUB_PATH

    - name: 3. Configure OCI CLI
      run: |
        echo "Configuring OCI CLI credentials..."
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
        chmod 600 ~/.oci/oci_api_key.pem ~/.oci/config

    # ... the rest of the file remains exactly the same ...
    - name: 4. Log in to OCI Container Registry (OCIR)
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.OCI_REGION }}.ocir.io
        username: ${{ secrets.OCIR_USERNAME }}
        password: ${{ secrets.OCIR_AUTH_TOKEN }}

    - name: 5. Set Image Tag Environment Variable
      run: |
        IMAGE_TAG="${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ env.APP_NAME }}/${{ env.FUNCTION_NAME }}:${{ github.sha }}"
        echo "FULL_IMAGE_NAME=$IMAGE_TAG" >> $GITHUB_ENV

    - name: 6. Build and Push Docker Image
      run: |
        echo "Building image: ${{ env.FULL_IMAGE_NAME }}"
        docker build -t "${{ env.FULL_IMAGE_NAME }}" .
        echo "Pushing image to OCIR..."
        docker push "${{ env.FULL_IMAGE_NAME }}"

    - name: 7. Deploy Function to OCI
      run: |
        echo "Updating function with new image..."
        oci fn function update \
          --application-name "${{ env.APP_NAME }}" \
          --function-name "${{ env.FUNCTION_NAME }}" \
          --image "${{ env.FULL_IMAGE_NAME }}"
          
        echo "âœ… Deployment successful!"