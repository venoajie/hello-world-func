
name: 'Update Application Code (on Push to Main)'

on:
  push:
    branches:
      - main

env:
  APP_NAME: "hello-world-app"
  FUNCTION_NAME: "hello-world-writer"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 1. Check out repository
      uses: actions/checkout@v4

    - name: 2. Install and Configure OCI CLI
      run: |
        pip install oci-cli
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
        chmod 600 ~/.oci/oci_api_key.pem ~/.oci/config

    - name: 3. Log in to OCI Container Registry (OCIR)
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.OCI_REGION }}.ocir.io
        username: ${{ secrets.OCIR_USERNAME }}
        password: ${{ secrets.OCIR_AUTH_TOKEN }}

    - name: 4. Set Image Tag Environment Variable
      run: |
        IMAGE_TAG="${{ secrets.OCI_REGION }}.ocir.io/${{ secrets.OCI_NAMESPACE }}/${{ env.APP_NAME }}/${{ env.FUNCTION_NAME }}:${{ github.sha }}"
        echo "FULL_IMAGE_NAME=$IMAGE_TAG" >> $GITHUB_ENV

    - name: 5. Build and Push Docker Image
      run: |
        docker build -t "${{ env.FULL_IMAGE_NAME }}" .
        docker push "${{ env.FULL_IMAGE_NAME }}"

    - name: 6. Update OCI Function with New Image
      run: |
        echo "Looking up function OCID..."
        APP_OCID=$(oci fn application list --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} --display-name "${{ env.APP_NAME }}" --query "data[0].id" --raw-output)
        FUNCTION_OCID=$(oci fn function list --application-id "$APP_OCID" --display-name "${{ env.FUNCTION_NAME }}" --query "data[0].id" --raw-output)

        if [ -z "$FUNCTION_OCID" ]; then
          echo "FATAL: Function '${{ env.FUNCTION_NAME }}' not found. Run the 'Provision Function' workflow manually first."
          exit 1
        fi

        echo "Updating function $FUNCTION_OCID with new image..."
        # This surgical command ONLY updates the image, leaving infrastructure untouched.
        oci fn function update \
          --function-id "$FUNCTION_OCID" \
          --image "${{ env.FULL_IMAGE_NAME }}"

        echo "âœ… Application update successful!"